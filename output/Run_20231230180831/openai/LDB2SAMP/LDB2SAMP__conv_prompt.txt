[
  {
    "role": "system",
    "content": "You are a helpful AI assistant. You are an expert in converting COBOL code to Python code.\nPlease do not explain the code, just provide code.\nProvide a main method to run the python code. Also do not omit any code for brevity. We want the whole code.\n"
  },
  {
    "role": "user",
    "content": "Please convert the Cobol code to Python code.\nThe Cobol code can be found between the delimiters === COBOL START === and === COBOL END ===.\nMake sure that the code is formatted using markdown syntax.\nHints:\n* Cobol code accesses DB2 database tables via EXEC SQL..END-EXEC statements\n* Assume equivalent Oracle table exists with similar schema as the DB2 tables\n* Access Oracle table via SQLAlchemy package in python\n\n=== COBOL START ===\n IDENTIFICATION DIVISION.\n PROGRAM-ID. LDB2SAMP.\n\n DATA DIVISION.\n\n WORKING-STORAGE SECTION.\n\n EXEC SQL INCLUDE SQLCA END-EXEC.\n\n 01 EMPLOYEE.\n   05 EMPNO PIC X(6).\n   05 FIRSTNME.\n     49 LEN PIC S9(4) COMP-5.\n     49 DAT PIC X(12).\n   05 MIDINIT PIC X(1).\n   05 LASTNAME.\n     49 LEN PIC S9(4) COMP-5.\n     49 DAT PIC X(15).\n   05 WORKDEPT PIC X(3).\n   05 PHONENO PIC X(4).\n   05 HIREDATE PIC X(10).\n   05 JOB PIC X(8).\n   05 EDLEVEL PIC S9(4) COMP-5.\n   05 SEX PIC X(1).\n   05 BIRTHDATE PIC X(10).\n   05 SALARY PIC S9(7)V9(2) COMP-3.\n   05 BONUS PIC S9(7)V9(2) COMP-3.\n   05 COMM PIC S9(7)V9(2) COMP-3.\n\n 01 VARIABLES.\n     02 RECORDCOUNT        PIC S9(8) USAGE COMP-3.\n     02 DISPLAYRC          PIC S9(4) USAGE DISPLAY.\n     02 OUT                PIC X(200).\n     02 NEXTEMP            PIC X(6).\n     02 NEXTEMPNO          PIC 9(6).\n     02 FIRSTNMEP          PIC X(12).\n     02 LASTNAMEP          PIC X(15).\n\n\n LINKAGE SECTION.\n\n PROCEDURE DIVISION.\n\n     MOVE LOW-VALUES TO VARIABLES.\n\n     EXEC SQL SELECT COUNT (*)\n                     INTO :RECORDCOUNT\n                     FROM EMPLOYEE\n                     END-EXEC.\n\n     IF SQLCODE = 0 THEN\n         MOVE RECORDCOUNT TO DISPLAYRC\n         MOVE \"THE NUMBER OF EMPLOYEES IN THE DATABASE IS \" TO OUT\n         MOVE DISPLAYRC TO OUT(44:4)\n     ELSE IF SQLCODE = 100 THEN\n         MOVE \"NO EMPLOYEES FOUND IN DATABASE\" TO OUT\n     ELSE\n         MOVE \"SQL ERROR \" TO OUT\n         MOVE SQLCODE TO OUT(11:10)\n     END-IF.\n\n     DISPLAY OUT.\n\n     IF SQLCODE = 0 THEN\n         EXEC SQL SELECT MAX (EMPNO)\n                         INTO :NEXTEMP\n                         FROM EMPLOYEE\n                         END-EXEC\n\n         MOVE NEXTEMP TO NEXTEMPNO\n\n         COMPUTE NEXTEMPNO = NEXTEMPNO + 10\n\n         MOVE NEXTEMPNO TO EMPNO\n         MOVE \"FRANK\" TO FIRSTNMEP\n         MOVE \"JONES\" TO LASTNAMEP\n         MOVE \"Y\" TO MIDINIT\n         MOVE \"A00\" TO WORKDEPT\n         MOVE \"1234\" TO PHONENO\n         MOVE \"04-30-1979\" TO HIREDATE\n         MOVE \"Clerk\" TO JOB\n         MOVE 15 TO EDLEVEL\n         MOVE \"M\" TO SEX\n         MOVE \"05-30-1954\" TO BIRTHDATE\n         MOVE \"36170\" TO SALARY\n         MOVE \"400\" TO BONUS\n         MOVE \"2387\" TO COMM\n\n         EXEC SQL INSERT INTO EMPLOYEE\n                         VALUES(:EMPNO,\n                                :FIRSTNMEP,\n                                :MIDINIT,\n                                :LASTNAMEP,\n                                :WORKDEPT,\n                                :PHONENO,\n                                :HIREDATE,\n                                :JOB,\n                                :EDLEVEL,\n                                :SEX,\n                                :BIRTHDATE,\n                                :SALARY,\n                                :BONUS,\n                                :COMM)\n                         END-EXEC\n\n         IF SQLCODE = 0 THEN\n            EXEC SQL SELECT *\n                     INTO :EMPNO,\n                          :FIRSTNME,\n                          :MIDINIT,\n                          :LASTNAME,\n                          :WORKDEPT,\n                          :PHONENO,\n                          :HIREDATE,\n                          :JOB,\n                          :EDLEVEL,\n                          :SEX,\n                          :BIRTHDATE,\n                          :SALARY,\n                          :BONUS,\n                          :COMM\n                     FROM EMPLOYEE\n                     WHERE EMPNO = :EMPNO\n                     END-EXEC\n\n            EXEC SQL COMMIT END-EXEC\n\n            MOVE FIRSTNMEP TO OUT\n            MOVE LASTNAMEP TO OUT(14:15)\n            DISPLAY OUT\n            DISPLAY \"ADDED TO THE DATABASE\"\n\n         ELSE\n            MOVE \"SQL ERROR\" TO OUT\n            DISPLAY OUT\n         END-IF\n\n     END-IF.\n\n\n     GOBACK.\n=== COBOL END ==="
  }
]