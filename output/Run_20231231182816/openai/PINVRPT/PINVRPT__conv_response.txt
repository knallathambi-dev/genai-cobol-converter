Here is the Python code equivalent to the provided COBOL code:

```python
import datetime

# File paths
INALL = '/home/knallathambi/workspace/cobol_apps/tmp/INALL.dat'
INACT = '/home/knallathambi/workspace/cobol_apps/tmp/INACT.dat'
INSPN = '/home/knallathambi/workspace/cobol_apps/tmp/INSPN.dat'
INDES = '/home/knallathambi/workspace/cobol_apps/tmp/INDES.dat'
RPTALL = '/home/knallathambi/workspace/cobol_apps/tmp/RPTALL.dat'
RPTACT = '/home/knallathambi/workspace/cobol_apps/tmp/RPTACT.dat'
RPTSPN = '/home/knallathambi/workspace/cobol_apps/tmp/RPTSPN.dat'
RPTDES = '/home/knallathambi/workspace/cobol_apps/tmp/RPTDES.dat'

# Headers
HEADER_1 = 'HAYNIE RESEARCH & DEVELOPMENT'
HEADER_ALL = 'PROPELLANT GRAIN INVENTORY REPORT - ALL'
HEADER_ACTIVE = 'PROPELLANT GRAIN INVENTORY REPORT - ACTIVE'
HEADER_SPENT = 'PROPELLANT GRAIN INVENTORY REPORT - SPENT'
HEADER_DESTROYED = 'PROPELLANT GRAIN INVENTORY REPORT - DESTROYED'
HEADER_3 = 'SERIAL          STATUS        TYPE          FORMULA         QA    WEIGHT'
HEADER_4 = '------------  ----------  ----------  ---------------  ----  -----------'

# Counters
INALL_COUNT = 0
INACT_COUNT = 0
INSPN_COUNT = 0
INDES_COUNT = 0
RPTALL_COUNT = 0
RPTACT_COUNT = 0
RPTSPN_COUNT = 0
RPTDES_COUNT = 0

def main():
    current_date = datetime.datetime.now()
    report_all()
    report_active()
    report_spent()
    report_destroyed()
    display_stats()

def report_all():
    global INALL_COUNT, RPTALL_COUNT
    with open(INALL, 'r') as inall, open(RPTALL, 'w') as rptall:
        for line in inall:
            INALL_COUNT += 1
            serial = line[0:12].strip()
            status = line[37:38].strip()
            if status == '0':
                status = 'ACTIVE'
            elif status == '1':
                status = 'SPENT'
            elif status == '3':
                status = 'DESTROYED'
            else:
                status = 'OTHER'
            type = line[12:22].strip()
            formula = line[22:37].strip()
            qa = line[38:42].strip()
            weight = line[72:82].strip()
            out_record = f'{serial}  {status}  {type}  {formula}  {qa}  {weight}'
            rptall.write(out_record + '\n')
            RPTALL_COUNT += 1

# Similar functions for report_active, report_spent, report_destroyed

def display_stats():
    print('********************************************')
    print('**** INPUT FILES ***************************')
    print(f'*** FILE INALL ROWS = {INALL_COUNT}')
    print(f'*** FILE INACT ROWS = {INACT_COUNT}')
    print(f'*** FILE INSPN ROWS = {INSPN_COUNT}')
    print(f'*** FILE INDES ROWS = {INDES_COUNT}')
    print('**** OUTPUT FILES ***************************')
    print(f'*** FILE RPTALL ROWS = {RPTALL_COUNT}')
    print(f'*** FILE RPTACT ROWS = {RPTACT_COUNT}')
    print(f'*** FILE RPTSPN ROWS = {RPTSPN_COUNT}')
    print(f'*** FILE RPTDES ROWS = {RPTDES_COUNT}')
    print('********************************************')

if __name__ == "__main__":
    main()
```

Please note that this Python code is a simplified version of the COBOL code. It does not include all the error checking and file handling that the COBOL code does. Also, the Python code assumes that the input files are text files with fixed-width fields, as per the COBOL code. If the actual file formats are different, the Python code will need to be adjusted accordingly.